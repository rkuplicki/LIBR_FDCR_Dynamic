#idp_tdcs
#dcr_tpre_response_box_rt_0
#dcr_tpre_response_craving_rt_0
#idps_neurocaps_ocr$dcr_response_box_craving[0-7]
column_suffixes <- 0:7
these_cols <- c('id', paste0(prefix, 'response_', measure, '_', column_suffixes))
library(reshape2)
one_dataset <- idps[, these_cols]
long_data <- melt(one_dataset, id.vars = c('id'))
long_data$variable <- as.character(long_data$variable)
long_data$condition <- NA
long_data$number <- substr(long_data$variable, nchar(long_data$variable), nchar(long_data$variable))
long_data$condition[long_data$number %in% c('0', '2', '4', '6')] <- 'neutral'
long_data$condition[long_data$number %in% c('1', '3', '5', '7')] <- 'drug'
#put neutral in the intercept
long_data$condition <- factor(long_data$condition, levels = c('neutral', 'drug'))
#time = block number, just like for the imaging variables
long_data$time <- NA
long_data$time[long_data$number %in% c('0', '1')] <- 1
long_data$time[long_data$number %in% c('2', '3')] <- 2
long_data$time[long_data$number %in% c('4', '5')] <- 3
long_data$time[long_data$number %in% c('6', '7')] <- 4
#mean center on time
long_data$time <- long_data$time - mean(long_data$time)
library(lme4)
library(lmerTest)
library(ggplot2)
library(sjstats) #for icc of mixed effects models
all_results <- NULL
for (this_id in unique(long_data$id)){
#this_id <- 'AR316'
this_sub_data <- long_data[long_data$id == this_id,]
neutral_string <- paste0(this_label, '_slopeNeutral')
meth_string <- paste0(this_label, '_slopeMeth')
delta_string <- paste0(this_label, '_slopeMethMinusNeutral')
if (sum(!(is.na(this_sub_data$value[this_sub_data$condition == 'neutral']))) > 1 &
sum(!(is.na(this_sub_data$value[this_sub_data$condition == 'drug']))) > 1){
#subject made at least two ratings per condition
this_lm <- lm(paste('value ~ condition * time'), data = this_sub_data)
these_results <- data.frame(list(id = this_id, neutral_string = this_lm$coefficients['time'],
meth_string = this_lm$coefficients['time'] + this_lm$coefficients['conditiondrug:time'],
delta_string = this_lm$coefficients['conditiondrug:time']))
names(these_results) <- c('id', neutral_string, meth_string, delta_string)
} else{
#not enough ratings to estimate two slopes
these_results <- data.frame(list(id = this_id, neutral_string = NA,
meth_string = NA,
delta_string = NA))
names(these_results) <- c('id', neutral_string, meth_string, delta_string)
}
all_results <- rbind(all_results, these_results)
}
return(all_results)
}
extract_one_slopes <- function( roi = '1', this_label = 'VMPFC', prefix = 'dcr_tpre_', idps = idps_tdcs){
column_prefixes <- c('stats_tdcsprelim_drug.r11.0.coef_mean_',
'stats_tdcsprelim_drug.r12.0.coef_mean_',
'stats_tdcsprelim_drug.r13.0.coef_mean_',
'stats_tdcsprelim_drug.r14.0.coef_mean_',
'stats_tdcsprelim_neutral.r11.0.coef_mean_',
'stats_tdcsprelim_neutral.r12.0.coef_mean_',
'stats_tdcsprelim_neutral.r13.0.coef_mean_',
'stats_tdcsprelim_neutral.r14.0.coef_mean_')
this_roi <- c('id', 'motion', paste0(prefix, column_prefixes, roi))
one_dataset <- idps[, this_roi]
long_data <- melt(one_dataset, id.vars = c('id', 'motion'))
long_data$condition <- NA
long_data$condition[grepl('neutral', long_data$variable)] <- 'neutral'
long_data$condition[grepl('drug', long_data$variable)] <- 'drug'
#put neutral in the intercept
long_data$condition <- factor(long_data$condition, levels = c('neutral', 'drug'))
long_data$time <- NA
long_data$time[grepl('r11', long_data$variable)] <- 1
long_data$time[grepl('r12', long_data$variable)] <- 2
long_data$time[grepl('r13', long_data$variable)] <- 3
long_data$time[grepl('r14', long_data$variable)] <- 4
#mean center on time
long_data$time <- long_data$time - mean(long_data$time)
#this_lme <- lmer(paste('value ~ condition * time + (1|id)'), data = long_data)
#for checking for NA's, looks like it's all good now
#print(long_data)
all_results <- NULL
for (this_id in unique(long_data$id)){
#this_id <- 'AR316'
this_lm <- lm(paste('value ~ condition * time + motion'), data = long_data[long_data$id == this_id,])
neutral_string <- paste0(this_label, '_slopeNeutral')
meth_string <- paste0(this_label, '_slopeMeth')
delta_string <- paste0(this_label, '_slopeMethMinusNeutral')
these_results <- data.frame(list(id = this_id, neutral_string = this_lm$coefficients['time'],
meth_string = this_lm$coefficients['time'] + this_lm$coefficients['conditiondrug:time'],
delta_string = this_lm$coefficients['conditiondrug:time']))
names(these_results) <- c('id', neutral_string, meth_string, delta_string)
all_results <- rbind(all_results, these_results)
}
return(all_results)
}
all_slopes <- extract_one_slopes('1', 'VMPFC', prefix = 'dcr_tpre_', idps = idps_tdcs)
all_slopes <- merge(all_slopes, extract_one_slopes('3', 'LSTG', prefix = 'dcr_tpre_', idps = idps_tdcs))
all_slopes <- merge(all_slopes, extract_one_slopes('4', 'RSTG', prefix = 'dcr_tpre_', idps = idps_tdcs))
all_slopes <- merge(all_slopes, extract_one_slopes('5', 'LVSTRI', prefix = 'dcr_tpre_', idps = idps_tdcs))
all_slopes <- merge(all_slopes, extract_one_slopes('6', 'RVSTRI', prefix = 'dcr_tpre_', idps = idps_tdcs))
all_slopes <- merge(all_slopes, extract_one_slopes('8', 'RAmy', prefix = 'dcr_tpre_', idps = idps_tdcs))
vas_data <- read.csv('../paper-dcr-temporaldynamics/data/MethVASData.csv')
vas_data <- vas_data[, c('record_id', 'redcap_event_name', 'mcs_vas', 'mcs_vas_2')]
names(vas_data) <- c('id', 'visit', 'craving', 'control')
library(reshape2)
vas_data_1 <- vas_data[vas_data$visit == 'before_pre_fmri_arm_1', c('id', 'craving', 'control')]
vas_data_2 <- vas_data[vas_data$visit == 'after_pre_fmri_arm_1', c('id', 'craving', 'control')]
vas_data_wide <- merge(vas_data_1, vas_data_2, by = 'id')
names(vas_data_wide) <- c('id', 'craving_pre', 'control_pre', 'craving_post', 'control_post')
vas_data_wide$craving_delta <- vas_data_wide$craving_post - vas_data_wide$craving_pre
vas_data_wide$control_delta <- vas_data_wide$control_post - vas_data_wide$control_pre
merged_data <- merge(all_slopes, vas_data_wide, all.x = TRUE)
last_use_data <- read.csv('../paper-dcr-temporaldynamics/data/ADUQ_2019-06-12_1407.csv')
merged_data <- merge(merged_data, last_use_data[, c('id', 'aduq_20a')], all.x = TRUE)
names(merged_data)[names(merged_data) == 'aduq_20a'] <- 'DaysSinceLastUse'
tableone_data <- read.csv('../paper-dcr-temporaldynamics/data/Table1Database66_ver2.csv')
merged_data <- merge(merged_data, tableone_data, all.x = TRUE)
idps_tdcs$methvsneutral_craving_selfreport_insidescanner <- (idps_tdcs$dcr_tpre_response_craving_1 + idps_tdcs$dcr_tpre_response_craving_3 +
idps_tdcs$dcr_tpre_response_craving_5 + idps_tdcs$dcr_tpre_response_craving_7 -
idps_tdcs$dcr_tpre_response_craving_0 - idps_tdcs$dcr_tpre_response_craving_2 - idps_tdcs$dcr_tpre_response_craving_4 - idps_tdcs$dcr_tpre_response_craving_6) / 4
merged_data <- merge(merged_data, extract_slopes_beh('craving', 'Craving', idps_tdcs, prefix = 'dcr_tpre_'), all.x = TRUE)
merged_data <- merge(merged_data, idps_tdcs[, c('id', 'methvsneutral_craving_selfreport_insidescanner')])
names(merged_data)
names(merged_data)[names(merged_data) == 'Meth.Cue.Reactivity.Screening.score..0.100.'] <- 'BaselineCueReactivity'
names(merged_data)[names(merged_data) == 'Duration.of.Meth.use.at.least.once.a.week..years.'] <- 'MethUseDuration'
names(merged_data)[names(merged_data) == 'Cost.of.Meth..dollar.per.month.'] <- 'MethCost'
names(merged_data)[names(merged_data) == 'craving_post'] <- 'Craving_post'
names(merged_data)[names(merged_data) == 'craving_pre'] <- 'Craving_pre'
names(merged_data)[names(merged_data) == 'craving_delta'] <- 'Craving_delta'
to_plot <- c('Age', 'MethUseDuration', 'MethCost',"DaysSinceLastUse",
'BaselineCueReactivity',  "Craving_pre", "Craving_post", "Craving_delta",
"VMPFC_slopeNeutral", "VMPFC_slopeMeth",  "VMPFC_slopeMethMinusNeutral",
"LSTG_slopeNeutral", "LSTG_slopeMeth","LSTG_slopeMethMinusNeutral",
"RSTG_slopeNeutral", "RSTG_slopeMeth", "RSTG_slopeMethMinusNeutral",
"LVSTRI_slopeNeutral", "LVSTRI_slopeMeth", "LVSTRI_slopeMethMinusNeutral",
"RVSTRI_slopeNeutral", "RVSTRI_slopeMeth", "RVSTRI_slopeMethMinusNeutral",
"RAmy_slopeNeutral", "RAmy_slopeMeth", "RAmy_slopeMethMinusNeutral")
to_plot <- c('Age', 'MethUseDuration', 'MethCost',"DaysSinceLastUse",
"Craving_pre", "Craving_post", "Craving_delta",
'methvsneutral_craving_selfreport_insidescanner',
'Craving_slopeMethMinusNeutral',
"VMPFC_slopeMethMinusNeutral",
"LSTG_slopeMethMinusNeutral",
"RSTG_slopeMethMinusNeutral",
"LVSTRI_slopeMethMinusNeutral",
"RVSTRI_slopeMethMinusNeutral",
"RAmy_slopeMethMinusNeutral")
library(corrplot)
this_matrix <- cor(merged_data[, to_plot], use = 'pairwise.complete.obs')
pvals_raw <- cor.mtest(merged_data[, to_plot])
#get FDR corrected p-values to use for plotting
pvals_fdr <- pvals_raw$p
pvals_fdr[upper.tri(pvals_fdr)] <- p.adjust(pvals_raw$p[upper.tri(pvals_raw$p)])
pvals_fdr[lower.tri(pvals_fdr)] <- p.adjust(pvals_raw$p[lower.tri(pvals_raw$p)])
col2 <- colorRampPalette(rev(c("#67001F", "#B2182B", "#D6604D", "#F4A582",
"#FDDBC7", "#FFFFFF", "#D1E5F0", "#92C5DE",
"#4393C3", "#2166AC", "#053061")))
png('corrplot_slopes_sxs.png', width = 1000, height = 1000)
corrplot.mixed(this_matrix, upper = 'ellipse', lower = 'number', tl.pos = 'lt', tl.cex = 1,#, lower.col = "black",
upper.col = col2(50), lower.col = col2(50), p.mat = pvals_fdr, sig.level = 0.05)
dev.off()
all_slopes
roi = '1'
this_label = 'VMPFC'
prefix = 'dcr_tpre_'
idps = idps_tdcs
column_prefixes <- c('stats_tdcsprelim_drug.r11.0.coef_mean_',
'stats_tdcsprelim_drug.r12.0.coef_mean_',
'stats_tdcsprelim_drug.r13.0.coef_mean_',
'stats_tdcsprelim_drug.r14.0.coef_mean_',
'stats_tdcsprelim_neutral.r11.0.coef_mean_',
'stats_tdcsprelim_neutral.r12.0.coef_mean_',
'stats_tdcsprelim_neutral.r13.0.coef_mean_',
'stats_tdcsprelim_neutral.r14.0.coef_mean_')
this_roi <- c('id', 'motion', paste0(prefix, column_prefixes, roi))
one_dataset <- idps[, this_roi]
long_data <- melt(one_dataset, id.vars = c('id', 'motion'))
long_data$condition <- NA
long_data$condition[grepl('neutral', long_data$variable)] <- 'neutral'
long_data$condition[grepl('drug', long_data$variable)] <- 'drug'
#put neutral in the intercept
long_data$condition <- factor(long_data$condition, levels = c('neutral', 'drug'))
long_data$time <- NA
long_data$time[grepl('r11', long_data$variable)] <- 1
long_data$time[grepl('r12', long_data$variable)] <- 2
long_data$time[grepl('r13', long_data$variable)] <- 3
long_data$time[grepl('r14', long_data$variable)] <- 4
#mean center on time
long_data$time <- long_data$time - mean(long_data$time)
#this_lme <- lmer(paste('value ~ condition * time + (1|id)'), data = long_data)
#for checking for NA's, looks like it's all good now
#print(long_data)
all_results <- NULL
this_id <- long_data$id[1]
this_id
this_lm <- lm(paste('value ~ condition * time + motion'), data = long_data[long_data$id == this_id,])
neutral_string <- paste0(this_label, '_slopeNeutral')
meth_string <- paste0(this_label, '_slopeMeth')
delta_string <- paste0(this_label, '_slopeMethMinusNeutral')
these_results <- data.frame(list(id = this_id, neutral_string = this_lm$coefficients['time'],
meth_string = this_lm$coefficients['time'] + this_lm$coefficients['conditiondrug:time'],
delta_string = this_lm$coefficients['conditiondrug:time']))
names(these_results) <- c('id', neutral_string, meth_string, delta_string)
all_results <- rbind(all_results, these_results)
these_results
this_sub_data <- long_data[long_data$id == this_id,]
this_sub_data
#add in mean of MethMinusNeutral for block 1, block 2, averaged across blocks 1/2, and averaged across all blocks
these_results[, block1_string] <- this_sub_data$value[this_sub_data$condition == 'drug' & this_sub_data$time == -1.5] - this_sub_data$value[this_sub_data$condition == 'neutral' & this_sub_data$time == -1.5]
block1_string <- paste0(this_label, '_MethMinusNeutral1')
#add in mean of MethMinusNeutral for block 1, block 2, averaged across blocks 1/2, and averaged across all blocks
these_results[, block1_string] <- this_sub_data$value[this_sub_data$condition == 'drug' & this_sub_data$time == -1.5] - this_sub_data$value[this_sub_data$condition == 'neutral' & this_sub_data$time == -1.5]
these_results
block2_string <- paste0(this_label, '_MethMinusNeutralB2')
these_results[, block1_string] <- this_sub_data$value[this_sub_data$condition == 'drug' & this_sub_data$time == -0.5] - this_sub_data$value[this_sub_data$condition == 'neutral' & this_sub_data$time == -0.5]
all_results <- rbind(all_results, these_results)
these_results[, block1_string] <- this_sub_data$value[this_sub_data$condition == 'drug' & this_sub_data$time == -0.5] - this_sub_data$value[this_sub_data$condition == 'neutral' & this_sub_data$time == -0.5]
these_results
block2_string <- paste0(this_label, '_MethMinusNeutralB2')
these_results[, block2_string] <- this_sub_data$value[this_sub_data$condition == 'drug' & this_sub_data$time == -0.5] - this_sub_data$value[this_sub_data$condition == 'neutral' & this_sub_data$time == -0.5]
these_results
block12_string <- paste0(this_label, '_MethMinusNeutralBlocks.1.2')
these_results[, block2_string] <- (this_sub_data$value[this_sub_data$condition == 'drug' & this_sub_data$time %in% c(-1.5, -0.5)] -
this_sub_data$value[this_sub_data$condition == 'neutral' & this_sub_data$time %in%  c(-1.5, -0.5)]) / 2
these_results[, block2_string] <- (sum(this_sub_data$value[this_sub_data$condition == 'drug' & this_sub_data$time %in% c(-1.5, -0.5)]) -
sum(this_sub_data$value[this_sub_data$condition == 'neutral' & this_sub_data$time %in%  c(-1.5, -0.5)])) / 2
these_results
these_results[, block12_string] <- (sum(this_sub_data$value[this_sub_data$condition == 'drug' & this_sub_data$time %in% c(-1.5, -0.5)]) -
sum(this_sub_data$value[this_sub_data$condition == 'neutral' & this_sub_data$time %in%  c(-1.5, -0.5)])) / 2
these_results
these_results <- data.frame(list(id = this_id, neutral_string = this_lm$coefficients['time'],
meth_string = this_lm$coefficients['time'] + this_lm$coefficients['conditiondrug:time'],
delta_string = this_lm$coefficients['conditiondrug:time']))
names(these_results) <- c('id', neutral_string, meth_string, delta_string)
#add in mean of MethMinusNeutral for block 1, block 2, averaged across blocks 1/2, and averaged across all blocks
block1_string <- paste0(this_label, '_MethMinusNeutralBlock.1')
these_results[, block1_string] <- this_sub_data$value[this_sub_data$condition == 'drug' & this_sub_data$time == -1.5] - this_sub_data$value[this_sub_data$condition == 'neutral' & this_sub_data$time == -1.5]
block2_string <- paste0(this_label, '_MethMinusNeutralBlock.2')
these_results[, block2_string] <- this_sub_data$value[this_sub_data$condition == 'drug' & this_sub_data$time == -0.5] - this_sub_data$value[this_sub_data$condition == 'neutral' & this_sub_data$time == -0.5]
block12_string <- paste0(this_label, '_MethMinusNeutralBlocks.1.2')
these_results[, block12_string] <- (sum(this_sub_data$value[this_sub_data$condition == 'drug' & this_sub_data$time %in% c(-1.5, -0.5)]) -
sum(this_sub_data$value[this_sub_data$condition == 'neutral' & this_sub_data$time %in%  c(-1.5, -0.5)])) / 2
block1234_string <- paste0(this_label, '_MethMinusNeutralBlocks.1.2.3.4')
these_results[, block1234_string] <- (sum(this_sub_data$value[this_sub_data$condition == 'drug']) -
sum(this_sub_data$value[this_sub_data$condition == 'neutral']) / 4
these_results
these_results
all_results
this_sub_data <- long_data[long_data$id == this_id,]
this_lm <- lm(paste('value ~ condition * time + motion'), data = this_sub_data)
neutral_string <- paste0(this_label, '_slopeNeutral')
meth_string <- paste0(this_label, '_slopeMeth')
delta_string <- paste0(this_label, '_slopeMethMinusNeutral')
these_results <- data.frame(list(id = this_id, neutral_string = this_lm$coefficients['time'],
meth_string = this_lm$coefficients['time'] + this_lm$coefficients['conditiondrug:time'],
delta_string = this_lm$coefficients['conditiondrug:time']))
names(these_results) <- c('id', neutral_string, meth_string, delta_string)
#add in mean of MethMinusNeutral for block 1, block 2, averaged across blocks 1/2, and averaged across all blocks
block1_string <- paste0(this_label, '_MethMinusNeutralBlock.1')
these_results[, block1_string] <- this_sub_data$value[this_sub_data$condition == 'drug' & this_sub_data$time == -1.5] - this_sub_data$value[this_sub_data$condition == 'neutral' & this_sub_data$time == -1.5]
block2_string <- paste0(this_label, '_MethMinusNeutralBlock.2')
these_results[, block2_string] <- this_sub_data$value[this_sub_data$condition == 'drug' & this_sub_data$time == -0.5] - this_sub_data$value[this_sub_data$condition == 'neutral' & this_sub_data$time == -0.5]
block12_string <- paste0(this_label, '_MethMinusNeutralBlocks.1.2')
these_results[, block12_string] <- (sum(this_sub_data$value[this_sub_data$condition == 'drug' & this_sub_data$time %in% c(-1.5, -0.5)]) -
sum(this_sub_data$value[this_sub_data$condition == 'neutral' & this_sub_data$time %in%  c(-1.5, -0.5)])) / 2
block1234_string <- paste0(this_label, '_MethMinusNeutralBlocks.1.2.3.4')
these_results[, block1234_string] <- (sum(this_sub_data$value[this_sub_data$condition == 'drug']) -
sum(this_sub_data$value[this_sub_data$condition == 'neutral']) / 4
)
this_sub_data <- long_data[long_data$id == this_id,]
this_lm <- lm(paste('value ~ condition * time + motion'), data = this_sub_data)
neutral_string <- paste0(this_label, '_slopeNeutral')
meth_string <- paste0(this_label, '_slopeMeth')
delta_string <- paste0(this_label, '_slopeMethMinusNeutral')
these_results <- data.frame(list(id = this_id, neutral_string = this_lm$coefficients['time'],
meth_string = this_lm$coefficients['time'] + this_lm$coefficients['conditiondrug:time'],
delta_string = this_lm$coefficients['conditiondrug:time']))
names(these_results) <- c('id', neutral_string, meth_string, delta_string)
#add in mean of MethMinusNeutral for block 1, block 2, averaged across blocks 1/2, and averaged across all blocks
block1_string <- paste0(this_label, '_MethMinusNeutralBlock.1')
these_results[, block1_string] <- this_sub_data$value[this_sub_data$condition == 'drug' & this_sub_data$time == -1.5] - this_sub_data$value[this_sub_data$condition == 'neutral' & this_sub_data$time == -1.5]
block2_string <- paste0(this_label, '_MethMinusNeutralBlock.2')
these_results[, block2_string] <- this_sub_data$value[this_sub_data$condition == 'drug' & this_sub_data$time == -0.5] - this_sub_data$value[this_sub_data$condition == 'neutral' & this_sub_data$time == -0.5]
block12_string <- paste0(this_label, '_MethMinusNeutralBlocks.1.2')
these_results[, block12_string] <- (sum(this_sub_data$value[this_sub_data$condition == 'drug' & this_sub_data$time %in% c(-1.5, -0.5)]) -
sum(this_sub_data$value[this_sub_data$condition == 'neutral' & this_sub_data$time %in%  c(-1.5, -0.5)])) / 2
block1234_string <- paste0(this_label, '_MethMinusNeutralBlocks.1.2.3.4')
these_results[, block1234_string] <- (sum(this_sub_data$value[this_sub_data$condition == 'drug']) -
sum(this_sub_data$value[this_sub_data$condition == 'neutral'])) / 4
these_results
extract_one_slopes <- function( roi = '1', this_label = 'VMPFC', prefix = 'dcr_tpre_', idps = idps_tdcs){
#roi = '1'
#this_label = 'VMPFC'
#prefix = 'dcr_tpre_'
#idps = idps_tdcs
column_prefixes <- c('stats_tdcsprelim_drug.r11.0.coef_mean_',
'stats_tdcsprelim_drug.r12.0.coef_mean_',
'stats_tdcsprelim_drug.r13.0.coef_mean_',
'stats_tdcsprelim_drug.r14.0.coef_mean_',
'stats_tdcsprelim_neutral.r11.0.coef_mean_',
'stats_tdcsprelim_neutral.r12.0.coef_mean_',
'stats_tdcsprelim_neutral.r13.0.coef_mean_',
'stats_tdcsprelim_neutral.r14.0.coef_mean_')
this_roi <- c('id', 'motion', paste0(prefix, column_prefixes, roi))
one_dataset <- idps[, this_roi]
long_data <- melt(one_dataset, id.vars = c('id', 'motion'))
long_data$condition <- NA
long_data$condition[grepl('neutral', long_data$variable)] <- 'neutral'
long_data$condition[grepl('drug', long_data$variable)] <- 'drug'
#put neutral in the intercept
long_data$condition <- factor(long_data$condition, levels = c('neutral', 'drug'))
long_data$time <- NA
long_data$time[grepl('r11', long_data$variable)] <- 1
long_data$time[grepl('r12', long_data$variable)] <- 2
long_data$time[grepl('r13', long_data$variable)] <- 3
long_data$time[grepl('r14', long_data$variable)] <- 4
#mean center on time
long_data$time <- long_data$time - mean(long_data$time)
#this_lme <- lmer(paste('value ~ condition * time + (1|id)'), data = long_data)
#for checking for NA's, looks like it's all good now
#print(long_data)
all_results <- NULL
for (this_id in unique(long_data$id)){
#this_id <- 'AR316'
this_sub_data <- long_data[long_data$id == this_id,]
this_lm <- lm(paste('value ~ condition * time + motion'), data = this_sub_data)
neutral_string <- paste0(this_label, '_slopeNeutral')
meth_string <- paste0(this_label, '_slopeMeth')
delta_string <- paste0(this_label, '_slopeMethMinusNeutral')
these_results <- data.frame(list(id = this_id, neutral_string = this_lm$coefficients['time'],
meth_string = this_lm$coefficients['time'] + this_lm$coefficients['conditiondrug:time'],
delta_string = this_lm$coefficients['conditiondrug:time']))
names(these_results) <- c('id', neutral_string, meth_string, delta_string)
#add in mean of MethMinusNeutral for block 1, block 2, averaged across blocks 1/2, and averaged across all blocks
block1_string <- paste0(this_label, '_MethMinusNeutralBlock.1')
these_results[, block1_string] <- this_sub_data$value[this_sub_data$condition == 'drug' & this_sub_data$time == -1.5] - this_sub_data$value[this_sub_data$condition == 'neutral' & this_sub_data$time == -1.5]
block2_string <- paste0(this_label, '_MethMinusNeutralBlock.2')
these_results[, block2_string] <- this_sub_data$value[this_sub_data$condition == 'drug' & this_sub_data$time == -0.5] - this_sub_data$value[this_sub_data$condition == 'neutral' & this_sub_data$time == -0.5]
block12_string <- paste0(this_label, '_MethMinusNeutralBlocks.1.2')
these_results[, block12_string] <- (sum(this_sub_data$value[this_sub_data$condition == 'drug' & this_sub_data$time %in% c(-1.5, -0.5)]) -
sum(this_sub_data$value[this_sub_data$condition == 'neutral' & this_sub_data$time %in%  c(-1.5, -0.5)])) / 2
block1234_string <- paste0(this_label, '_MethMinusNeutralBlocks.1.2.3.4')
these_results[, block1234_string] <- (sum(this_sub_data$value[this_sub_data$condition == 'drug']) -
sum(this_sub_data$value[this_sub_data$condition == 'neutral'])) / 4
all_results <- rbind(all_results, these_results)
}
return(all_results)
}
all_slopes <- extract_one_slopes('1', 'VMPFC', prefix = 'dcr_tpre_', idps = idps_tdcs)
all_slopes <- merge(all_slopes, extract_one_slopes('3', 'LSTG', prefix = 'dcr_tpre_', idps = idps_tdcs))
all_slopes <- merge(all_slopes, extract_one_slopes('4', 'RSTG', prefix = 'dcr_tpre_', idps = idps_tdcs))
all_slopes <- merge(all_slopes, extract_one_slopes('6', 'RVSTRI', prefix = 'dcr_tpre_', idps = idps_tdcs))
all_slopes <- merge(all_slopes, extract_one_slopes('4', 'RSTG', prefix = 'dcr_tpre_', idps = idps_tdcs))
all_slopes <- merge(all_slopes, extract_one_slopes('5', 'LVSTRI', prefix = 'dcr_tpre_', idps = idps_tdcs))
all_slopes <- merge(all_slopes, extract_one_slopes('8', 'RAmy', prefix = 'dcr_tpre_', idps = idps_tdcs))
all_slopes
vas_data <- read.csv('../paper-dcr-temporaldynamics/data/MethVASData.csv')
vas_data <- vas_data[, c('record_id', 'redcap_event_name', 'mcs_vas', 'mcs_vas_2')]
names(vas_data) <- c('id', 'visit', 'craving', 'control')
library(reshape2)
vas_data_1 <- vas_data[vas_data$visit == 'before_pre_fmri_arm_1', c('id', 'craving', 'control')]
vas_data_2 <- vas_data[vas_data$visit == 'after_pre_fmri_arm_1', c('id', 'craving', 'control')]
vas_data_wide <- merge(vas_data_1, vas_data_2, by = 'id')
names(vas_data_wide) <- c('id', 'craving_pre', 'control_pre', 'craving_post', 'control_post')
vas_data_wide$craving_delta <- vas_data_wide$craving_post - vas_data_wide$craving_pre
vas_data_wide$control_delta <- vas_data_wide$control_post - vas_data_wide$control_pre
merged_data <- merge(all_slopes, vas_data_wide, all.x = TRUE)
last_use_data <- read.csv('../paper-dcr-temporaldynamics/data/ADUQ_2019-06-12_1407.csv')
merged_data <- merge(merged_data, last_use_data[, c('id', 'aduq_20a')], all.x = TRUE)
names(merged_data)[names(merged_data) == 'aduq_20a'] <- 'DaysSinceLastUse'
tableone_data <- read.csv('../paper-dcr-temporaldynamics/data/Table1Database66_ver2.csv')
merged_data <- merge(merged_data, tableone_data, all.x = TRUE)
idps_tdcs$methvsneutral_craving_selfreport_insidescanner <- (idps_tdcs$dcr_tpre_response_craving_1 + idps_tdcs$dcr_tpre_response_craving_3 +
idps_tdcs$dcr_tpre_response_craving_5 + idps_tdcs$dcr_tpre_response_craving_7 -
idps_tdcs$dcr_tpre_response_craving_0 - idps_tdcs$dcr_tpre_response_craving_2 - idps_tdcs$dcr_tpre_response_craving_4 - idps_tdcs$dcr_tpre_response_craving_6) / 4
merged_data <- merge(merged_data, extract_slopes_beh('craving', 'Craving', idps_tdcs, prefix = 'dcr_tpre_'), all.x = TRUE)
merged_data <- merge(merged_data, idps_tdcs[, c('id', 'methvsneutral_craving_selfreport_insidescanner')])
names(merged_data)
names(merged_data)[names(merged_data) == 'Meth.Cue.Reactivity.Screening.score..0.100.'] <- 'BaselineCueReactivity'
names(merged_data)[names(merged_data) == 'Duration.of.Meth.use.at.least.once.a.week..years.'] <- 'MethUseDuration'
names(merged_data)[names(merged_data) == 'Cost.of.Meth..dollar.per.month.'] <- 'MethCost'
names(merged_data)[names(merged_data) == 'craving_post'] <- 'Craving_post'
names(merged_data)[names(merged_data) == 'craving_pre'] <- 'Craving_pre'
names(merged_data)[names(merged_data) == 'craving_delta'] <- 'Craving_delta'
to_plot <- c('Age', 'MethUseDuration', 'MethCost',"DaysSinceLastUse",
"Craving_pre", "Craving_post", "Craving_delta",
'methvsneutral_craving_selfreport_insidescanner',
'Craving_slopeMethMinusNeutral',
"VMPFC_slopeMethMinusNeutral",
"LSTG_slopeMethMinusNeutral",
"RSTG_slopeMethMinusNeutral",
"LVSTRI_slopeMethMinusNeutral",
"RVSTRI_slopeMethMinusNeutral",
"RAmy_slopeMethMinusNeutral",
"VMPFC_MethMinusNeutralBlock.1",
"VMPFC_MethMinusNeutralBlock.2",
"VMPFC_MethMinusNeutralBlocks.1.2",
"VMPFC_MethMinusNeutralBlocks.1.2.3.4",
"LSTG_MethMinusNeutralBlock.1",
"LSTG_MethMinusNeutralBlock.2",
"LSTG_MethMinusNeutralBlocks.1.2",
"LSTG_MethMinusNeutralBlocks.1.2.3.4",
"RSTG_MethMinusNeutralBlock.1",
"RSTG_MethMinusNeutralBlock.2",
"RSTG_MethMinusNeutralBlocks.1.2",
"RSTG_MethMinusNeutralBlocks.1.2.3.4",
"LVSTRI_MethMinusNeutralBlock.1",
"LVSTRI_MethMinusNeutralBlock.2",
"LVSTRI_MethMinusNeutralBlocks.1.2",
"LVSTRI_MethMinusNeutralBlocks.1.2.3.4",
"RVSTRI_MethMinusNeutralBlock.1",
"RVSTRI_MethMinusNeutralBlock.2",
"RVSTRI_MethMinusNeutralBlocks.1.2",
"RVSTRI_MethMinusNeutralBlocks.1.2.3.4",
"RAmy_MethMinusNeutralBlock.1",
"RAmy_MethMinusNeutralBlock.2",
"RAmy_MethMinusNeutralBlocks.1.2",
"RAmy_MethMinusNeutralBlocks.1.2.3.4")
library(corrplot)
this_matrix <- cor(merged_data[, to_plot], use = 'pairwise.complete.obs')
pvals_raw <- cor.mtest(merged_data[, to_plot])
#get FDR corrected p-values to use for plotting
pvals_fdr <- pvals_raw$p
pvals_fdr[upper.tri(pvals_fdr)] <- p.adjust(pvals_raw$p[upper.tri(pvals_raw$p)])
pvals_fdr[lower.tri(pvals_fdr)] <- p.adjust(pvals_raw$p[lower.tri(pvals_raw$p)])
col2 <- colorRampPalette(rev(c("#67001F", "#B2182B", "#D6604D", "#F4A582",
"#FDDBC7", "#FFFFFF", "#D1E5F0", "#92C5DE",
"#4393C3", "#2166AC", "#053061")))
png('corrplot_slopes_sxs.png', width = 1000, height = 1000)
corrplot.mixed(this_matrix, upper = 'ellipse', lower = 'number', tl.pos = 'lt', tl.cex = 1,#, lower.col = "black",
upper.col = col2(50), lower.col = col2(50), p.mat = pvals_fdr, sig.level = 0.05)
dev.off()
png('corrplot_slopes_sxs.png', width = 1000, height = 1000)
corrplot.mixed(this_matrix, upper = 'ellipse', lower = 'number', tl.pos = 'lt', tl.cex = 1,#, lower.col = "black",
upper.col = col2(50), lower.col = col2(50), p.mat = pvals_fdr, sig.level = 0.05)
dev.off()
png('corrplot_slopes_sxs1.png', width = 1000, height = 1000)
corrplot.mixed(this_matrix, upper = 'ellipse', lower = 'number', tl.pos = 'lt', tl.cex = 1,#, lower.col = "black",
upper.col = col2(50), lower.col = col2(50), p.mat = pvals_fdr, sig.level = 0.05)
dev.off()
png('corrplot_slopes_sxs1.png', width = 1500, height = 1500)
corrplot.mixed(this_matrix, upper = 'ellipse', lower = 'number', tl.pos = 'lt', tl.cex = 1,#, lower.col = "black",
upper.col = col2(50), lower.col = col2(50), p.mat = pvals_fdr, sig.level = 0.05)
dev.off()
ROI <- 'VMPFC'
to_plot_roi <- paste0(ROI, c("_slopeMethMinusNeutral",
"_MethMinusNeutralBlock.1",
"_MethMinusNeutralBlock.2",
"_MethMinusNeutralBlocks.1.2",
"_MethMinusNeutralBlocks.1.2.3.4"))
to_plot_roi
plot_one <- function(ROI){
to_plot_common <- c('Age', 'MethUseDuration', 'MethCost',"DaysSinceLastUse",
"Craving_pre", "Craving_post", "Craving_delta",
'methvsneutral_craving_selfreport_insidescanner',
'Craving_slopeMethMinusNeutral'
)
to_plot_roi <- paste0(ROI, c("_slopeMethMinusNeutral",
"_MethMinusNeutralBlock.1",
"_MethMinusNeutralBlock.2",
"_MethMinusNeutralBlocks.1.2",
"_MethMinusNeutralBlocks.1.2.3.4"))
to_plot <- c(to_plot_common, to_plot_roi)
this_matrix <- cor(merged_data[, to_plot], use = 'pairwise.complete.obs')
pvals_raw <- cor.mtest(merged_data[, to_plot])
#get FDR corrected p-values to use for plotting
pvals_fdr <- pvals_raw$p
pvals_fdr[upper.tri(pvals_fdr)] <- p.adjust(pvals_raw$p[upper.tri(pvals_raw$p)])
pvals_fdr[lower.tri(pvals_fdr)] <- p.adjust(pvals_raw$p[lower.tri(pvals_raw$p)])
col2 <- colorRampPalette(rev(c("#67001F", "#B2182B", "#D6604D", "#F4A582",
"#FDDBC7", "#FFFFFF", "#D1E5F0", "#92C5DE",
"#4393C3", "#2166AC", "#053061")))
png(paste0('corrplot_slopes_sxs-', ROI, '.png'), width = 1500, height = 1500)
corrplot.mixed(this_matrix, upper = 'ellipse', lower = 'number', tl.pos = 'lt', tl.cex = 1,#, lower.col = "black",
upper.col = col2(50), lower.col = col2(50), p.mat = pvals_fdr, sig.level = 0.05)
dev.off()
}
plot_on('VMPFC')
plot_one('VMPFC')
plot_one <- function(ROI){
to_plot_common <- c('Age', 'MethUseDuration', 'MethCost',"DaysSinceLastUse",
"Craving_pre", "Craving_post", "Craving_delta",
'methvsneutral_craving_selfreport_insidescanner',
'Craving_slopeMethMinusNeutral'
)
to_plot_roi <- paste0(ROI, c("_slopeMethMinusNeutral",
"_MethMinusNeutralBlock.1",
"_MethMinusNeutralBlock.2",
"_MethMinusNeutralBlocks.1.2",
"_MethMinusNeutralBlocks.1.2.3.4"))
to_plot <- c(to_plot_common, to_plot_roi)
this_matrix <- cor(merged_data[, to_plot], use = 'pairwise.complete.obs')
pvals_raw <- cor.mtest(merged_data[, to_plot])
#get FDR corrected p-values to use for plotting
pvals_fdr <- pvals_raw$p
pvals_fdr[upper.tri(pvals_fdr)] <- p.adjust(pvals_raw$p[upper.tri(pvals_raw$p)])
pvals_fdr[lower.tri(pvals_fdr)] <- p.adjust(pvals_raw$p[lower.tri(pvals_raw$p)])
col2 <- colorRampPalette(rev(c("#67001F", "#B2182B", "#D6604D", "#F4A582",
"#FDDBC7", "#FFFFFF", "#D1E5F0", "#92C5DE",
"#4393C3", "#2166AC", "#053061")))
png(paste0('corrplot_slopes_sxs-', ROI, '.png'), width = 1000, height = 1000)
corrplot.mixed(this_matrix, upper = 'ellipse', lower = 'number', tl.pos = 'lt', tl.cex = 1,#, lower.col = "black",
upper.col = col2(50), lower.col = col2(50), p.mat = pvals_fdr, sig.level = 0.05)
dev.off()
}
plot_one('VMPFC')
plot_one('LSTG')
plot_one('RSTG')
plot_one('LVSTRI')
plot_one('RVSTRI')
plot_one('RAmy')
